{"version":3,"sources":["components/Navbar.js","components/Footer.js","components/Search/SearchInput.js","components/Search/SearchSelect.js","components/Search/index.js","components/EmployeeTable/SortableColumn.js","components/EmployeeTable/RegularColumn.js","components/EmployeeTable/TableHeaderRow.js","components/EmployeeTable/TableRow.js","components/EmployeeTable/index.js","pages/TableView.js","components/EmployeeCard/index.js","pages/CardView.js","utils/Employees.js","utils/ColumnDefinitions.js","App.js","index.js"],"names":["Navbar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","this","getActiveClass","to","aria-hidden","value","props","location","pathname","React","Component","withRouter","Footer","SearchInput","title","column","name","onChange","handleInputChange","placeholder","SearchSelect","options","map","item","key","Search","event","a","currentTarget","handleFilterChanged","handleSearchReset","defaultFilter","columnDefinitions","columns","filter","renderSearchField","onClick","SortableColumn","scope","handleSortColumn","renderSortOrder","columnName","sortColumn","sortAscending","RegularColumn","TableHeaderRow","preventDefault","newSortColumn","sortOrderAscending","sort","handleSortChanged","TableRow","renderColumn","uniqueId","data","alt","src","imageFilePath","image","email","EmployeeTable","renderRows","employees","length","colSpan","employee","TableView","EmployeeCard","department","phone","CardView","defaultSort","renderCards","Employees","all","employeeDataset","searchCriteria","filterConditions","Object","keys","searchColumn","trim","toLowerCase","reduce","isSelected","filterColumn","includes","applySort","selectedEmployees","sortCriteria","employeeA","employeeB","ColumnDefinitions","emptyFilter","forEach","IMAGE_FILE_PATH","path","join","process","App","state","filteredEmployees","setState","basename","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01084b97.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark emp-dir-background\">\n                <a href=\"/\" className=\"navbar-brand\">Employee Directory</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarContent\" aria-controls=\"navbarContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarContent\">\n                    <ul className=\"navbar-nav ml-auto\">\n                        <li className={this.getActiveClass(\"/\")}>\n                            <Link to=\"/\" className=\"nav-link\">\n                                <i className=\"fa fa-list-ul\" aria-hidden=\"true\"></i> List\n                            </Link>\n                        </li>\n                        <li className={this.getActiveClass(\"/CardView\")}>\n                            <Link to=\"/CardView\" className=\"nav-link\">\n                                <i className=\"fa fa-th\" aria-hidden=\"true\"></i> Card\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n\n    getActiveClass(value) {\n        return (this.props.location.pathname === value) ? \"nav-item active\" : \"nav-item\";\n    }\n}\n\nexport default withRouter(Navbar);","import React from \"react\";\n\nclass Footer extends React.Component {\n\n    render() {\n        return (\n            <footer className=\"footer emp-dir-background text-center\">\n                <div className=\"container py-2 pb-3\">\n                    <span>Employee Directory &copy; 2020</span>\n                </div>\n            </footer>\n        );\n    }\n}\n\nexport default Footer;","import React from \"react\";\r\n\r\n// This component generates a search input field for a given search column\r\nclass SearchInput extends React.Component {\r\n    render(props) {\r\n        return (\r\n            <div className=\"input-group mx-1\" title={this.props.column.name}>\r\n                <div className=\"input-group-prepend\">\r\n                    <div className=\"input-group-text\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></div>\r\n                </div>\r\n                <input className=\"form-control\" type=\"text\"\r\n                    onChange={this.props.handleInputChange}\r\n                    value={this.props.value}\r\n                    name={this.props.column.id}\r\n                    placeholder={`${this.props.column.name} ...`} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchInput;","import React from \"react\";\r\n\r\n// This component generates a search dropdown for a given search column\r\nclass SearchSelect extends React.Component {\r\n    render(props) {\r\n        return (\r\n            <select className=\"form-control mx-1\"\r\n                value={this.props.value}\r\n                onChange={this.props.handleInputChange}\r\n                name={this.props.column.id}\r\n                title={this.props.column.name}>\r\n                <option value=\"\">{this.props.column.name}...</option>\r\n                {this.props.column.options.map(item =>\r\n                    <option key={item} value={item}>{item}</option>\r\n                )}\r\n            </select>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchSelect;","import React from \"react\";\r\nimport SearchInput from \"./SearchInput\";\r\nimport SearchSelect from \"./SearchSelect\";\r\nimport \"./style.css\";\r\n\r\n// This component generates the search form based on the column definitions specified\r\nclass Search extends React.Component {\r\n\r\n    // Event handler updates search filter with value entered / selected\r\n    handleInputChange = async event => {\r\n        let value = event.currentTarget.value;\r\n        const name = event.currentTarget.name;\r\n        this.props.handleFilterChanged({ [name]: value });\r\n    };\r\n\r\n    // Resets the search filter\r\n    handleSearchReset = async event => {\r\n        const defaultFilter = this.props.columnDefinitions.defaultFilter();\r\n        this.props.handleFilterChanged(defaultFilter);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"form-inline px-3 pt-4 pb-2 search-form justify-content-center\">\r\n                {this.props.columnDefinitions.columns.map(column =>\r\n                    (column.filter) ? this.renderSearchField(column) : \"\"\r\n                )}\r\n                <button className=\"btn btn-secondary reset-button mx-1\"\r\n                    onClick={this.handleSearchReset}\r\n                    type=\"reset\">\r\n                    <i className=\"fa fa-refresh pr-1\" aria-hidden=\"true\"></i> Reset</button>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    // renders a search field based on column type\r\n    renderSearchField(column) {\r\n        if (column.options) {\r\n            // column has options, so render a select field\r\n            return (<SearchSelect key={column.id}\r\n                column={column}\r\n                handleInputChange={this.handleInputChange}\r\n                value={this.props.filter[column.id]} />)\r\n        }\r\n        // By default render input field\r\n        return (<SearchInput key={column.id}\r\n            column={column}\r\n            handleInputChange={this.handleInputChange}\r\n            value={this.props.filter[column.id]} />)\r\n    }\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\n\r\n// This component generates a sortable header column for the table\r\nclass SortableColumn extends React.Component {\r\n    render() {\r\n        return (\r\n            <th scope=\"col\" className=\"p-0\">\r\n                <button className=\"btn btn-secondary sort-column rounded-0 w-100 h-100 text-left\"\r\n                    onClick={this.props.handleSortColumn} name={this.props.column.id}>\r\n                    {this.props.column.name} {this.renderSortOrder(this.props.column.id)}\r\n                </button>\r\n            </th>);\r\n    }\r\n\r\n    // Display the sort icons based on sort order\r\n    renderSortOrder(columnName) {\r\n        if (this.props.sortColumn === columnName) {\r\n            if (this.props.sortAscending)\r\n                return <i className=\"fa fa-caret-up fa-lg pl-2\" aria-hidden=\"true\"></i>;\r\n            else\r\n                return <i className=\"fa fa-caret-down fa-lg pl-2\" aria-hidden=\"true\"></i>;\r\n        }\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default SortableColumn;","import React from \"react\";\r\n\r\n// This component generates a regular / non-sortable header column for the table\r\nclass RegularColumn extends React.Component {\r\n    render() {\r\n        return (\r\n            <th scope=\"col\" className=\"p-0\">\r\n                <button className=\"btn btn-secondary reg-column text-light rounded-0 w-100 h-100 text-left\">\r\n                    {this.props.column.name}\r\n                </button>\r\n            </th>);\r\n    }\r\n}\r\n\r\nexport default RegularColumn;","import React from \"react\";\r\nimport SortableColumn from \"./SortableColumn\";\r\nimport RegularColumn from \"./RegularColumn\";\r\n\r\n// This component generates a table header row based on the column definitions specified\r\nclass TableHeaderRow extends React.Component {\r\n\r\n    // Event handler for click on a sortable column - updates the table sort order\r\n    handleSortColumn = async event => {\r\n        event.preventDefault();\r\n        const newSortColumn = event.currentTarget.name;\r\n        let sortOrderAscending = true;\r\n        if (this.props.sort.sortColumn === newSortColumn) {\r\n            // Change sort order since it is the same column\r\n            sortOrderAscending = !this.props.sort.sortAscending;\r\n        }\r\n        // Update table sort\r\n        this.props.handleSortChanged({\r\n            sortColumn: newSortColumn,\r\n            sortAscending: sortOrderAscending\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <thead>\r\n                <tr>\r\n                    {this.props.columnDefinitions.columns.map(column => {\r\n                        return (column.sort) ?\r\n                            (<SortableColumn key={column.id} column={column}\r\n                                sortColumn={this.props.sort.sortColumn}\r\n                                sortAscending={this.props.sort.sortAscending}\r\n                                handleSortColumn={this.handleSortColumn} />)\r\n                            :\r\n                            (<RegularColumn key={column.id} column={column} />)\r\n                    })}\r\n                </tr>\r\n            </thead >\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableHeaderRow;","import React from \"react\";\r\n\r\n// This component generates a table data row\r\nclass TableRow extends React.Component {\r\n\r\n    render(props) {\r\n        return (\r\n            <tr className=\"align-middle\">\r\n                {this.props.columnDefinitions.columns.map(column => {\r\n                    return this.renderColumn(column);\r\n                })}\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    // render column based on id type\r\n    renderColumn(column) {\r\n        const uniqueId = `${column.id}${this.props.data[column.id]}`;\r\n        switch (column.id) {\r\n            case \"image\": {\r\n                return (<td key={uniqueId}><img alt={this.props.data.name} className=\"img-fluid rounded table-row-image my-2\"\r\n                    src={`${this.props.imageFilePath}${this.props.data.image}`} /></td>)\r\n            }\r\n            case \"email\": {\r\n                return (<td key={uniqueId}><a href={`mailto:${this.props.data.email}`}>{this.props.data.email}</a></td>)\r\n            }\r\n            default:\r\n                {\r\n                    return (<td key={uniqueId}>{this.props.data[column.id]}</td>)\r\n                }\r\n        }\r\n    }\r\n}\r\n\r\nexport default TableRow;","import React from \"react\";\r\nimport TableHeaderRow from \"./TableHeaderRow\";\r\nimport TableRow from \"./TableRow\";\r\nimport \"./style.css\";\r\n\r\n// This component generates the employee table based on the column definitions specified\r\nclass EmployeeTable extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-striped employee-table\">\r\n                    <TableHeaderRow\r\n                        sort={this.props.sort}\r\n                        handleSortChanged={this.props.handleSortChanged}\r\n                        columnDefinitions={this.props.columnDefinitions} />\r\n                    <tbody>\r\n                        {this.renderRows()}\r\n                    </tbody>\r\n                </table>\r\n            </div>);\r\n    }\r\n\r\n    // Renders all table data rows \r\n    renderRows() {\r\n        // Default text if no records are found\r\n        if (this.props.employees === null || this.props.employees.length <= 0) {\r\n            return <tr>\r\n                <td colSpan=\"8\" className=\"py-4 text-center\">\r\n                    Your Search did not match any employees !</td>\r\n            </tr>\r\n        }\r\n        // render all rows\r\n        return this.props.employees.map(employee =>\r\n            (<TableRow key={employee.id}\r\n                columnDefinitions={this.props.columnDefinitions}\r\n                imageFilePath={this.props.imageFilePath}\r\n                data={employee} />));\r\n    }\r\n\r\n}\r\n\r\nexport default EmployeeTable;","import React from \"react\";\r\nimport EmployeeTable from \"../components/EmployeeTable\";\r\n\r\n// This page displays employee data in a table based on the column definitions specified\r\nclass TableView extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <EmployeeTable\r\n                handleSortChanged={this.props.handleSortChanged}\r\n                employees={this.props.employees}\r\n                sort={this.props.sort}\r\n                imageFilePath={this.props.imageFilePath}\r\n                columnDefinitions={this.props.columnDefinitions} />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TableView;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// This component generates an employee card based on the data specified\r\nclass EmployeeCard extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card employee-card pb-0 rounded-0 text-center\">\r\n                <div className=\"card-body p-2\">\r\n                    <img alt={this.props.data.name} className=\"img-fluid rounded-circle employee-card-image m-2\"\r\n                        src={`${this.props.imageFilePath}${this.props.data.image}`} />\r\n                    <h5 className=\"card-title\">{this.props.data.name}</h5>\r\n                    <h6 className=\"card-title\">{this.props.data.title}</h6>\r\n                    <p>{this.props.data.department}</p>\r\n                    <p>{this.props.data.phone}</p>\r\n                    <p><a href={`mailto:${this.props.data.email}`}>{this.props.data.email}</a></p>\r\n                    <p>Employee Id: {this.props.data.id}</p>\r\n                    <p>{this.props.data.location}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EmployeeCard;","import React from \"react\";\r\nimport EmployeeCard from \"../components/EmployeeCard\";\r\n\r\n// This page displays employee data in cards\r\nclass CardView extends React.Component {\r\n\r\n    componentDidMount() {\r\n        // Update table sort to use default sorting \r\n        this.props.handleSortChanged(this.props.defaultSort);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"align-center\">\r\n                <div className=\"d-flex flex-row flex-wrap px-1 pb-3 justify-content-center\">\r\n                    {this.renderCards()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // renders all employee cards\r\n    renderCards() {\r\n        // Default text if no records are found\r\n        if (this.props.employees === null || this.props.employees.length <= 0) {\r\n            return <div>Your Search did not match any employees !</div>\r\n        }\r\n        // render all rows\r\n        return this.props.employees.map(employee =>\r\n            (<EmployeeCard key={employee.id}\r\n                imageFilePath={this.props.imageFilePath}\r\n                data={employee} />));\r\n    }\r\n}\r\n\r\nexport default CardView;","import employeeDataset from \"../employees.json\";\r\n\r\n// This module contains methods to work with the employee dataset  \r\nconst Employees = {\r\n    // Returns the entire employee dataset \r\n    all() {\r\n        return employeeDataset;\r\n    },\r\n\r\n    // Filter employees based on the search criteria passed in\r\n    // and return the matching records\r\n    filter(searchCriteria) {\r\n        // Loop through search criteria passed in, extract only items with values\r\n        const filterConditions = Object.keys(searchCriteria)\r\n            .filter(searchColumn => (searchCriteria[searchColumn].trim() !== \"\"))\r\n            .map(searchColumn => ({\r\n                \"key\": searchColumn,\r\n                \"value\": searchCriteria[searchColumn].trim().toLowerCase()\r\n            }));\r\n\r\n        // If filter criteria is specified, return whole dataset \r\n        if (filterConditions.length <= 0) {\r\n            return employeeDataset;\r\n        }\r\n\r\n        return employeeDataset\r\n            .filter(employee => {\r\n                // Return only employees matching ALL the filter criteria\r\n                return filterConditions.reduce((isSelected, filterColumn) =>\r\n                    (isSelected && (employee[filterColumn.key].toLowerCase().includes(filterColumn.value))\r\n                    ), true);\r\n            });\r\n    },\r\n\r\n    // Sorts the employee selection passed in based on the sort criteria \r\n    applySort(selectedEmployees, sortCriteria) {\r\n        const { sortColumn, sortAscending } = sortCriteria;\r\n        selectedEmployees\r\n            .sort(\r\n                (employeeA, employeeB) => {\r\n                    if (employeeA[sortColumn] < employeeB[sortColumn]) { return sortAscending ? -1 : 1; }\r\n                    if (employeeA[sortColumn] > employeeB[sortColumn]) { return sortAscending ? 1 : -1; }\r\n                    return 0;\r\n                });\r\n    },\r\n\r\n}\r\n\r\nexport default Employees;","\r\n// This module configures Column Definitions used to search and sort employee data \r\nconst ColumnDefinitions = {\r\n    // List of column definitions: \r\n    // id - column id , name - display name, \r\n    // sort(true if column supports sorting) \r\n    // filter(true if column supports filtering) \r\n    // options - column filter is restricted to list of options\r\n    columns: [\r\n        { \"id\": \"image\", \"name\": \"Picture\", \"sort\": false },\r\n        { \"id\": \"name\", \"name\": \"Name\", \"sort\": true, filter: true },\r\n        { \"id\": \"phone\", \"name\": \"Phone\", \"sort\": false },\r\n        { \"id\": \"email\", \"name\": \"Email\", \"sort\": false },\r\n        { \"id\": \"title\", \"name\": \"Job Title\", \"sort\": true, filter: true },\r\n        {\r\n            \"id\": \"department\", \"name\": \"Department\", \"sort\": true, filter: true,\r\n            \"options\": [\"Engineering\", \"Finance\", \"Legal\", \"Sales\"]\r\n        },\r\n        {\r\n            \"id\": \"location\", \"name\": \"Location\", \"sort\": true, filter: true,\r\n            \"options\": [\"Melbourne\", \"Perth\", \"Sydney\"]\r\n        },\r\n        { \"id\": \"id\", \"name\": \"Employee Id\", \"sort\": true }\r\n    ],\r\n\r\n    // Returns default / empty filter criteria \r\n    defaultFilter() {\r\n        const emptyFilter = {};\r\n        // Loop through all filterable columns and set empty filters\r\n        this.columns.forEach(column => {\r\n            if (column.filter)\r\n                emptyFilter[column.id] = \"\"\r\n        });\r\n        return emptyFilter;\r\n    },\r\n\r\n    // Returns default sort criteria \r\n    defaultSort() {\r\n        return { sortColumn: \"name\", sortAscending: true };\r\n    }\r\n};\r\n\r\nexport default ColumnDefinitions;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport Search from \"./components/Search\";\nimport TableView from \"./pages/TableView\";\nimport CardView from './pages/CardView';\nimport Employees from \"./utils/Employees\";\nimport ColumnDefinitions from \"./utils/ColumnDefinitions\";\nimport path from \"path\";\n\n// Path to employee images folder\nconst IMAGE_FILE_PATH = path.join(process.env.PUBLIC_URL, \"/images/employees/\");\n\n// The main application root component\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // Apply default sort criteria to employee dataset before loading state\n    const employeeDataset = Employees.all();\n    Employees.applySort(employeeDataset, ColumnDefinitions.defaultSort());\n\n    // Load state\n    this.state = {\n      employees: employeeDataset,\n      sort: ColumnDefinitions.defaultSort(),\n      filter: ColumnDefinitions.defaultFilter()\n    };\n  }\n\n  // This function applies a search filter to the employees dataset\n  handleFilterChanged = (filter) => {\n    const searchCriteria = { ...this.state.filter, ...filter };\n    const filteredEmployees = Employees.filter(searchCriteria);\n\n    // Apply current sort criteria  \n    Employees.applySort(filteredEmployees, this.state.sort);\n\n    this.setState({ ...this.state, employees: filteredEmployees, filter: { ...searchCriteria } });\n  };\n\n  // Apply new sort criteria to the current employee selection  \n  handleSortChanged = (sortCriteria) => {\n    Employees.applySort(this.state.employees, sortCriteria);\n    this.setState({ ...this.state, sort: { ...sortCriteria } });\n  };\n\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Navbar />\n\n        <Search\n          filter={this.state.filter}\n          columnDefinitions={ColumnDefinitions}\n          handleFilterChanged={this.handleFilterChanged} />\n\n        <Switch>\n          <Route exact path=\"/CardView\" render={() =>\n            <CardView\n              employees={this.state.employees}\n              defaultSort={ColumnDefinitions.defaultSort()}\n              handleSortChanged={this.handleSortChanged}\n              imageFilePath={IMAGE_FILE_PATH} />} />\n          <Route path=\"/\" render={() =>\n            <TableView\n              sort={this.state.sort}\n              columnDefinitions={ColumnDefinitions}\n              handleSortChanged={this.handleSortChanged}\n              employees={this.state.employees}\n              imageFilePath={IMAGE_FILE_PATH} />} />\n        </Switch>\n\n        <Footer />\n      </BrowserRouter >\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}